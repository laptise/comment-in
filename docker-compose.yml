# 開発環境
version: "3.8"
services:

  # Next.jsクライアント・サーバー
  next:
    container_name: ci_next
    build:
      context: .
      dockerfile: client.Dockerfile
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./next:/usr/src/app
      - ./types:/usr/src/types #共通型定義ファイル
      - ./.env:/.env
    command: >
      bash -c "yarn env &&
       yarn dev"
    ports:
      - "19000:3000"
    depends_on:
      - nest

  # Nest.jsサーバー
  nest:
    container_name: ci_nest
    tty: true
    build:
      context: .
      dockerfile: server.Dockerfile
    environment:
      TZ: Asia/Tokyo
    command: > 
      bash -c "yarn env &&
       yarn start:dev"
    volumes:
      - ./nest:/usr/src/app
      - ./types:/usr/src/types #共通型定義ファイル
      - ./.env:/.env
    ports:
      - "19001:3000"
    depends_on:
      - mysql
    expose:
      - 19001

  mysql:
    container_name: ci_db
    platform: linux/amd64
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: "Asia/Tokyo"
    ports:
      - 19009:3306
    expose:
      - 19009
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d #DB駆動エントリポイント
      - ./mysql/db:/var/lib/mysql #ここにデータ永続化するためのファイルが入る。
      - ./mysql/conf.d:/etc/mysql/conf.d #MySql設定ファイル
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD

  ci_nginx:
    tty: true
    container_name: ci_nginx
    image: nginx:1.21-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d
    depends_on:
      - next
